/* tslint:disable */
/* eslint-disable */
/**
 * wx/wx.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import type { Configuration } from './configuration';
import type { AxiosPromise, AxiosInstance, AxiosRequestConfig } from 'axios';
import globalAxios from 'axios';
// Some imports not used depending on template conditions
// @ts-ignore
import { DUMMY_BASE_URL, assertParamExists, setApiKeyToObject, setBasicAuthToObject, setBearerAuthToObject, setOAuthToObject, setSearchParams, serializeDataIfNeeded, toPathString, createRequestFunction } from './common';
import type { RequestArgs } from './base';
// @ts-ignore
import { BASE_PATH, COLLECTION_FORMATS, BaseAPI, RequiredError } from './base';

/**
 * 
 * @export
 * @interface ProtobufAny
 */
export interface ProtobufAny {
    [key: string]: object | any;

    /**
     * 
     * @type {string}
     * @memberof ProtobufAny
     */
    '@type'?: string;
}
/**
 * 
 * @export
 * @interface RpcStatus
 */
export interface RpcStatus {
    /**
     * 
     * @type {number}
     * @memberof RpcStatus
     */
    'code'?: number;
    /**
     * 
     * @type {string}
     * @memberof RpcStatus
     */
    'message'?: string;
    /**
     * 
     * @type {Array<ProtobufAny>}
     * @memberof RpcStatus
     */
    'details'?: Array<ProtobufAny>;
}
/**
 * 
 * @export
 * @interface WxSnsJscode2sessionResponse
 */
export interface WxSnsJscode2sessionResponse {
    /**
     * 
     * @type {string}
     * @memberof WxSnsJscode2sessionResponse
     */
    'sessionKey'?: string;
    /**
     * 
     * @type {string}
     * @memberof WxSnsJscode2sessionResponse
     */
    'unionid'?: string;
    /**
     * 
     * @type {string}
     * @memberof WxSnsJscode2sessionResponse
     */
    'openid'?: string;
}

/**
 * WxServiceApi - axios parameter creator
 * @export
 */
export const WxServiceApiAxiosParamCreator = function (configuration?: Configuration) {
    return {
        /**
         * 
         * @param {string} [appid] 小程序 appId
         * @param {string} [secret] 小程序 appSecret
         * @param {string} [jsCode] 登录时获取的 code，可通过[wx.login](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html)获取
         * @param {string} [grantType] 授权类型，此处只需填写 authorization_code
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        wxServiceSnsJscode2session: async (appid?: string, secret?: string, jsCode?: string, grantType?: string, options: AxiosRequestConfig = {}): Promise<RequestArgs> => {
            const localVarPath = `/wx.wx.WxService/sns`;
            // use dummy base URL string because the URL constructor only accepts absolute URLs.
            const localVarUrlObj = new URL(localVarPath, DUMMY_BASE_URL);
            let baseOptions;
            if (configuration) {
                baseOptions = configuration.baseOptions;
            }

            const localVarRequestOptions = { method: 'POST', ...baseOptions, ...options};
            const localVarHeaderParameter = {} as any;
            const localVarQueryParameter = {} as any;

            if (appid !== undefined) {
                localVarQueryParameter['appid'] = appid;
            }

            if (secret !== undefined) {
                localVarQueryParameter['secret'] = secret;
            }

            if (jsCode !== undefined) {
                localVarQueryParameter['jsCode'] = jsCode;
            }

            if (grantType !== undefined) {
                localVarQueryParameter['grantType'] = grantType;
            }


    
            setSearchParams(localVarUrlObj, localVarQueryParameter);
            let headersFromBaseOptions = baseOptions && baseOptions.headers ? baseOptions.headers : {};
            localVarRequestOptions.headers = {...localVarHeaderParameter, ...headersFromBaseOptions, ...options.headers};

            return {
                url: toPathString(localVarUrlObj),
                options: localVarRequestOptions,
            };
        },
    }
};

/**
 * WxServiceApi - functional programming interface
 * @export
 */
export const WxServiceApiFp = function(configuration?: Configuration) {
    const localVarAxiosParamCreator = WxServiceApiAxiosParamCreator(configuration)
    return {
        /**
         * 
         * @param {string} [appid] 小程序 appId
         * @param {string} [secret] 小程序 appSecret
         * @param {string} [jsCode] 登录时获取的 code，可通过[wx.login](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html)获取
         * @param {string} [grantType] 授权类型，此处只需填写 authorization_code
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        async wxServiceSnsJscode2session(appid?: string, secret?: string, jsCode?: string, grantType?: string, options?: AxiosRequestConfig): Promise<(axios?: AxiosInstance, basePath?: string) => AxiosPromise<WxSnsJscode2sessionResponse>> {
            const localVarAxiosArgs = await localVarAxiosParamCreator.wxServiceSnsJscode2session(appid, secret, jsCode, grantType, options);
            return createRequestFunction(localVarAxiosArgs, globalAxios, BASE_PATH, configuration);
        },
    }
};

/**
 * WxServiceApi - factory interface
 * @export
 */
export const WxServiceApiFactory = function (configuration?: Configuration, basePath?: string, axios?: AxiosInstance) {
    const localVarFp = WxServiceApiFp(configuration)
    return {
        /**
         * 
         * @param {string} [appid] 小程序 appId
         * @param {string} [secret] 小程序 appSecret
         * @param {string} [jsCode] 登录时获取的 code，可通过[wx.login](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html)获取
         * @param {string} [grantType] 授权类型，此处只需填写 authorization_code
         * @param {*} [options] Override http request option.
         * @throws {RequiredError}
         */
        wxServiceSnsJscode2session(appid?: string, secret?: string, jsCode?: string, grantType?: string, options?: any): AxiosPromise<WxSnsJscode2sessionResponse> {
            return localVarFp.wxServiceSnsJscode2session(appid, secret, jsCode, grantType, options).then((request) => request(axios, basePath));
        },
    };
};

/**
 * WxServiceApi - object-oriented interface
 * @export
 * @class WxServiceApi
 * @extends {BaseAPI}
 */
export class WxServiceApi extends BaseAPI {
    /**
     * 
     * @param {string} [appid] 小程序 appId
     * @param {string} [secret] 小程序 appSecret
     * @param {string} [jsCode] 登录时获取的 code，可通过[wx.login](https://developers.weixin.qq.com/miniprogram/dev/api/open-api/login/wx.login.html)获取
     * @param {string} [grantType] 授权类型，此处只需填写 authorization_code
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof WxServiceApi
     */
    public wxServiceSnsJscode2session(appid?: string, secret?: string, jsCode?: string, grantType?: string, options?: AxiosRequestConfig) {
        return WxServiceApiFp(this.configuration).wxServiceSnsJscode2session(appid, secret, jsCode, grantType, options).then((request) => request(this.axios, this.basePath));
    }
}


