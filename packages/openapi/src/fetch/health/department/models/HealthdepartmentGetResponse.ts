/* tslint:disable */
/* eslint-disable */
/**
 * health/department.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DepartmentHepartment } from './DepartmentHepartment';
import {
    DepartmentHepartmentFromJSON,
    DepartmentHepartmentFromJSONTyped,
    DepartmentHepartmentToJSON,
} from './DepartmentHepartment';
import type { HospitalHospital } from './HospitalHospital';
import {
    HospitalHospitalFromJSON,
    HospitalHospitalFromJSONTyped,
    HospitalHospitalToJSON,
} from './HospitalHospital';

/**
 * 
 * @export
 * @interface HealthdepartmentGetResponse
 */
export interface HealthdepartmentGetResponse {
    /**
     * 
     * @type {DepartmentHepartment}
     * @memberof HealthdepartmentGetResponse
     */
    department?: DepartmentHepartment;
    /**
     * 
     * @type {HospitalHospital}
     * @memberof HealthdepartmentGetResponse
     */
    hospital?: HospitalHospital;
}

/**
 * Check if a given object implements the HealthdepartmentGetResponse interface.
 */
export function instanceOfHealthdepartmentGetResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HealthdepartmentGetResponseFromJSON(json: any): HealthdepartmentGetResponse {
    return HealthdepartmentGetResponseFromJSONTyped(json, false);
}

export function HealthdepartmentGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthdepartmentGetResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'department': !exists(json, 'department') ? undefined : DepartmentHepartmentFromJSON(json['department']),
        'hospital': !exists(json, 'hospital') ? undefined : HospitalHospitalFromJSON(json['hospital']),
    };
}

export function HealthdepartmentGetResponseToJSON(value?: HealthdepartmentGetResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'department': DepartmentHepartmentToJSON(value.department),
        'hospital': HospitalHospitalToJSON(value.hospital),
    };
}

