/* tslint:disable */
/* eslint-disable */
/**
 * user/auth.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthAuthorizationCode
 */
export interface AuthAuthorizationCode {
    /**
     * 
     * @type {number}
     * @memberof AuthAuthorizationCode
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthorizationCode
     */
    code?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthorizationCode
     */
    userId?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthorizationCode
     */
    clientId?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthorizationCode
     */
    scope?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthAuthorizationCode
     */
    redirectUri?: string;
    /**
     * 
     * @type {Date}
     * @memberof AuthAuthorizationCode
     */
    until?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AuthAuthorizationCode
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AuthAuthorizationCode
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the AuthAuthorizationCode interface.
 */
export function instanceOfAuthAuthorizationCode(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthAuthorizationCodeFromJSON(json: any): AuthAuthorizationCode {
    return AuthAuthorizationCodeFromJSONTyped(json, false);
}

export function AuthAuthorizationCodeFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthAuthorizationCode {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'clientId': !exists(json, 'clientId') ? undefined : json['clientId'],
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'redirectUri': !exists(json, 'redirectUri') ? undefined : json['redirectUri'],
        'until': !exists(json, 'until') ? undefined : (new Date(json['until'])),
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function AuthAuthorizationCodeToJSON(value?: AuthAuthorizationCode | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'code': value.code,
        'userId': value.userId,
        'clientId': value.clientId,
        'scope': value.scope,
        'redirectUri': value.redirectUri,
        'until': value.until === undefined ? undefined : (value.until.toISOString()),
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

