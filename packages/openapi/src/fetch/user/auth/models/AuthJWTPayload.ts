/* tslint:disable */
/* eslint-disable */
/**
 * user/auth.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AuthJWTPayload
 */
export interface AuthJWTPayload {
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    iss?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    aud?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    sub?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    sco?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    exp?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    nbf?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    iat?: string;
    /**
     * 
     * @type {string}
     * @memberof AuthJWTPayload
     */
    jti?: string;
}

/**
 * Check if a given object implements the AuthJWTPayload interface.
 */
export function instanceOfAuthJWTPayload(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthJWTPayloadFromJSON(json: any): AuthJWTPayload {
    return AuthJWTPayloadFromJSONTyped(json, false);
}

export function AuthJWTPayloadFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthJWTPayload {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'iss': !exists(json, 'iss') ? undefined : json['iss'],
        'aud': !exists(json, 'aud') ? undefined : json['aud'],
        'sub': !exists(json, 'sub') ? undefined : json['sub'],
        'sco': !exists(json, 'sco') ? undefined : json['sco'],
        'exp': !exists(json, 'exp') ? undefined : json['exp'],
        'nbf': !exists(json, 'nbf') ? undefined : json['nbf'],
        'iat': !exists(json, 'iat') ? undefined : json['iat'],
        'jti': !exists(json, 'jti') ? undefined : json['jti'],
    };
}

export function AuthJWTPayloadToJSON(value?: AuthJWTPayload | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'iss': value.iss,
        'aud': value.aud,
        'sub': value.sub,
        'sco': value.sco,
        'exp': value.exp,
        'nbf': value.nbf,
        'iat': value.iat,
        'jti': value.jti,
    };
}

