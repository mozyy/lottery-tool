/* tslint:disable */
/* eslint-disable */
/**
 * user/auth.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthPattern } from './AuthPattern';
import {
    AuthPatternFromJSON,
    AuthPatternFromJSONTyped,
    AuthPatternToJSON,
} from './AuthPattern';

/**
 * 
 * @export
 * @interface AuthConfig
 */
export interface AuthConfig {
    /**
     * 
     * @type {number}
     * @memberof AuthConfig
     */
    id?: number;
    /**
     * 
     * @type {AuthPattern}
     * @memberof AuthConfig
     */
    pattern?: AuthPattern;
    /**
     * 
     * @type {string}
     * @memberof AuthConfig
     */
    scope?: string;
    /**
     * 
     * @type {Date}
     * @memberof AuthConfig
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof AuthConfig
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the AuthConfig interface.
 */
export function instanceOfAuthConfig(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AuthConfigFromJSON(json: any): AuthConfig {
    return AuthConfigFromJSONTyped(json, false);
}

export function AuthConfigFromJSONTyped(json: any, ignoreDiscriminator: boolean): AuthConfig {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'pattern': !exists(json, 'pattern') ? undefined : AuthPatternFromJSON(json['pattern']),
        'scope': !exists(json, 'scope') ? undefined : json['scope'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function AuthConfigToJSON(value?: AuthConfig | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'pattern': AuthPatternToJSON(value.pattern),
        'scope': value.scope,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

