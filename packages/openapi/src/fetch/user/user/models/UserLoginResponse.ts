/* tslint:disable */
/* eslint-disable */
/**
 * user/user.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AuthToken } from './AuthToken';
import {
    AuthTokenFromJSON,
    AuthTokenFromJSONTyped,
    AuthTokenToJSON,
} from './AuthToken';
import type { UserUser } from './UserUser';
import {
    UserUserFromJSON,
    UserUserFromJSONTyped,
    UserUserToJSON,
} from './UserUser';

/**
 * 
 * @export
 * @interface UserLoginResponse
 */
export interface UserLoginResponse {
    /**
     * 
     * @type {UserUser}
     * @memberof UserLoginResponse
     */
    user?: UserUser;
    /**
     * 
     * @type {AuthToken}
     * @memberof UserLoginResponse
     */
    token?: AuthToken;
}

/**
 * Check if a given object implements the UserLoginResponse interface.
 */
export function instanceOfUserLoginResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function UserLoginResponseFromJSON(json: any): UserLoginResponse {
    return UserLoginResponseFromJSONTyped(json, false);
}

export function UserLoginResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserLoginResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'user') ? undefined : UserUserFromJSON(json['user']),
        'token': !exists(json, 'token') ? undefined : AuthTokenFromJSON(json['token']),
    };
}

export function UserLoginResponseToJSON(value?: UserLoginResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': UserUserToJSON(value.user),
        'token': AuthTokenToJSON(value.token),
    };
}

