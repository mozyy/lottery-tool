/* tslint:disable */
/* eslint-disable */
/**
 * user/user.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
  UserLoginResponse,
} from '../models';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
    UserLoginResponseFromJSON,
    UserLoginResponseToJSON,
} from '../models';

export interface UserServiceLoginMobileRequest {
    mobile?: string;
    password?: string;
}

export interface UserServiceLoginWeixinRequest {
    code?: string;
}

export interface UserServiceRegisterMobileRequest {
    mobile?: string;
    password?: string;
}

/**
 * 
 */
export class UserServiceApi extends runtime.BaseAPI {

    /**
     */
    async userServiceLoginMobileRaw(requestParameters: UserServiceLoginMobileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserLoginResponse>> {
        const queryParameters: any = {};

        if (requestParameters.mobile !== undefined) {
            queryParameters['mobile'] = requestParameters.mobile;
        }

        if (requestParameters.password !== undefined) {
            queryParameters['password'] = requestParameters.password;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/user.user.UserService/loginMobile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserLoginResponseFromJSON(jsonValue));
    }

    /**
     */
    async userServiceLoginMobile(requestParameters: UserServiceLoginMobileRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserLoginResponse> {
        const response = await this.userServiceLoginMobileRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async userServiceLoginWeixinRaw(requestParameters: UserServiceLoginWeixinRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserLoginResponse>> {
        const queryParameters: any = {};

        if (requestParameters.code !== undefined) {
            queryParameters['code'] = requestParameters.code;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/user.user.UserService/loginWeixin`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserLoginResponseFromJSON(jsonValue));
    }

    /**
     */
    async userServiceLoginWeixin(requestParameters: UserServiceLoginWeixinRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserLoginResponse> {
        const response = await this.userServiceLoginWeixinRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async userServiceRegisterMobileRaw(requestParameters: UserServiceRegisterMobileRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<UserLoginResponse>> {
        const queryParameters: any = {};

        if (requestParameters.mobile !== undefined) {
            queryParameters['mobile'] = requestParameters.mobile;
        }

        if (requestParameters.password !== undefined) {
            queryParameters['password'] = requestParameters.password;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/user.user.UserService/registerMobile`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => UserLoginResponseFromJSON(jsonValue));
    }

    /**
     */
    async userServiceRegisterMobile(requestParameters: UserServiceRegisterMobileRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<UserLoginResponse> {
        const response = await this.userServiceRegisterMobileRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
