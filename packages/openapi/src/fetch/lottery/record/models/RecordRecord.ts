/* tslint:disable */
/* eslint-disable */
/**
 * lottery/record.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RecordRecordInfo } from './RecordRecordInfo';
import {
    RecordRecordInfoFromJSON,
    RecordRecordInfoFromJSONTyped,
    RecordRecordInfoToJSON,
} from './RecordRecordInfo';
import type { RecordRecordRemark } from './RecordRecordRemark';
import {
    RecordRecordRemarkFromJSON,
    RecordRecordRemarkFromJSONTyped,
    RecordRecordRemarkToJSON,
} from './RecordRecordRemark';

/**
 * 
 * @export
 * @interface RecordRecord
 */
export interface RecordRecord {
    /**
     * 
     * @type {RecordRecordInfo}
     * @memberof RecordRecord
     */
    record?: RecordRecordInfo;
    /**
     * 
     * @type {Array<RecordRecordRemark>}
     * @memberof RecordRecord
     */
    recordRemarks?: Array<RecordRecordRemark>;
}

/**
 * Check if a given object implements the RecordRecord interface.
 */
export function instanceOfRecordRecord(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecordRecordFromJSON(json: any): RecordRecord {
    return RecordRecordFromJSONTyped(json, false);
}

export function RecordRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordRecord {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'record': !exists(json, 'record') ? undefined : RecordRecordInfoFromJSON(json['record']),
        'recordRemarks': !exists(json, 'recordRemarks') ? undefined : ((json['recordRemarks'] as Array<any>).map(RecordRecordRemarkFromJSON)),
    };
}

export function RecordRecordToJSON(value?: RecordRecord | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'record': RecordRecordInfoToJSON(value.record),
        'recordRemarks': value.recordRemarks === undefined ? undefined : ((value.recordRemarks as Array<any>).map(RecordRecordRemarkToJSON)),
    };
}

