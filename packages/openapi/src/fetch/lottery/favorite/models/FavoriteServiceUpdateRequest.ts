/* tslint:disable */
/* eslint-disable */
/**
 * lottery/favorite.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LotteryfavoriteNewFavorite } from './LotteryfavoriteNewFavorite';
import {
    LotteryfavoriteNewFavoriteFromJSON,
    LotteryfavoriteNewFavoriteFromJSONTyped,
    LotteryfavoriteNewFavoriteToJSON,
} from './LotteryfavoriteNewFavorite';

/**
 * 
 * @export
 * @interface FavoriteServiceUpdateRequest
 */
export interface FavoriteServiceUpdateRequest {
    /**
     * 
     * @type {LotteryfavoriteNewFavorite}
     * @memberof FavoriteServiceUpdateRequest
     */
    favorite?: LotteryfavoriteNewFavorite;
}

/**
 * Check if a given object implements the FavoriteServiceUpdateRequest interface.
 */
export function instanceOfFavoriteServiceUpdateRequest(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function FavoriteServiceUpdateRequestFromJSON(json: any): FavoriteServiceUpdateRequest {
    return FavoriteServiceUpdateRequestFromJSONTyped(json, false);
}

export function FavoriteServiceUpdateRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): FavoriteServiceUpdateRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'favorite': !exists(json, 'favorite') ? undefined : LotteryfavoriteNewFavoriteFromJSON(json['favorite']),
    };
}

export function FavoriteServiceUpdateRequestToJSON(value?: FavoriteServiceUpdateRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'favorite': LotteryfavoriteNewFavoriteToJSON(value.favorite),
    };
}

