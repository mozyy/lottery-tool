/* tslint:disable */
/* eslint-disable */
/**
 * lottery/favorite.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LotteryLottery } from './LotteryLottery';
import {
    LotteryLotteryFromJSON,
    LotteryLotteryFromJSONTyped,
    LotteryLotteryToJSON,
} from './LotteryLottery';
import type { LotteryfavoriteFavorite } from './LotteryfavoriteFavorite';
import {
    LotteryfavoriteFavoriteFromJSON,
    LotteryfavoriteFavoriteFromJSONTyped,
    LotteryfavoriteFavoriteToJSON,
} from './LotteryfavoriteFavorite';

/**
 * 
 * @export
 * @interface LotteryfavoriteFavoriteWithLottery
 */
export interface LotteryfavoriteFavoriteWithLottery {
    /**
     * 
     * @type {LotteryfavoriteFavorite}
     * @memberof LotteryfavoriteFavoriteWithLottery
     */
    favorite?: LotteryfavoriteFavorite;
    /**
     * 
     * @type {LotteryLottery}
     * @memberof LotteryfavoriteFavoriteWithLottery
     */
    lottery?: LotteryLottery;
}

/**
 * Check if a given object implements the LotteryfavoriteFavoriteWithLottery interface.
 */
export function instanceOfLotteryfavoriteFavoriteWithLottery(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LotteryfavoriteFavoriteWithLotteryFromJSON(json: any): LotteryfavoriteFavoriteWithLottery {
    return LotteryfavoriteFavoriteWithLotteryFromJSONTyped(json, false);
}

export function LotteryfavoriteFavoriteWithLotteryFromJSONTyped(json: any, ignoreDiscriminator: boolean): LotteryfavoriteFavoriteWithLottery {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'favorite': !exists(json, 'favorite') ? undefined : LotteryfavoriteFavoriteFromJSON(json['favorite']),
        'lottery': !exists(json, 'lottery') ? undefined : LotteryLotteryFromJSON(json['lottery']),
    };
}

export function LotteryfavoriteFavoriteWithLotteryToJSON(value?: LotteryfavoriteFavoriteWithLottery | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'favorite': LotteryfavoriteFavoriteToJSON(value.favorite),
        'lottery': LotteryLotteryToJSON(value.lottery),
    };
}

