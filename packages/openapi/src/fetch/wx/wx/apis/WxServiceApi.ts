/* tslint:disable */
/* eslint-disable */
/**
 * wx/wx.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  RpcStatus,
  WxSnsJscode2sessionResponse,
} from '../models';
import {
    RpcStatusFromJSON,
    RpcStatusToJSON,
    WxSnsJscode2sessionResponseFromJSON,
    WxSnsJscode2sessionResponseToJSON,
} from '../models';

export interface WxServiceSnsJscode2sessionRequest {
    appid?: string;
    secret?: string;
    jsCode?: string;
    grantType?: string;
}

/**
 * 
 */
export class WxServiceApi extends runtime.BaseAPI {

    /**
     */
    async wxServiceSnsJscode2sessionRaw(requestParameters: WxServiceSnsJscode2sessionRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<WxSnsJscode2sessionResponse>> {
        const queryParameters: any = {};

        if (requestParameters.appid !== undefined) {
            queryParameters['appid'] = requestParameters.appid;
        }

        if (requestParameters.secret !== undefined) {
            queryParameters['secret'] = requestParameters.secret;
        }

        if (requestParameters.jsCode !== undefined) {
            queryParameters['jsCode'] = requestParameters.jsCode;
        }

        if (requestParameters.grantType !== undefined) {
            queryParameters['grantType'] = requestParameters.grantType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/wx.wx.WxService/sns`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => WxSnsJscode2sessionResponseFromJSON(jsonValue));
    }

    /**
     */
    async wxServiceSnsJscode2session(requestParameters: WxServiceSnsJscode2sessionRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<WxSnsJscode2sessionResponse> {
        const response = await this.wxServiceSnsJscode2sessionRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
