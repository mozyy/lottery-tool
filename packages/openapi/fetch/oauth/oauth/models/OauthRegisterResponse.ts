/* tslint:disable */
/* eslint-disable */
/**
 * oauth/oauth.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OauthToken } from './OauthToken';
import {
    OauthTokenFromJSON,
    OauthTokenFromJSONTyped,
    OauthTokenToJSON,
} from './OauthToken';
import type { OauthoauthUser } from './OauthoauthUser';
import {
    OauthoauthUserFromJSON,
    OauthoauthUserFromJSONTyped,
    OauthoauthUserToJSON,
} from './OauthoauthUser';

/**
 * 
 * @export
 * @interface OauthRegisterResponse
 */
export interface OauthRegisterResponse {
    /**
     * 
     * @type {OauthoauthUser}
     * @memberof OauthRegisterResponse
     */
    user?: OauthoauthUser;
    /**
     * 
     * @type {OauthToken}
     * @memberof OauthRegisterResponse
     */
    token?: OauthToken;
}

/**
 * Check if a given object implements the OauthRegisterResponse interface.
 */
export function instanceOfOauthRegisterResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OauthRegisterResponseFromJSON(json: any): OauthRegisterResponse {
    return OauthRegisterResponseFromJSONTyped(json, false);
}

export function OauthRegisterResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): OauthRegisterResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'user': !exists(json, 'user') ? undefined : OauthoauthUserFromJSON(json['user']),
        'token': !exists(json, 'token') ? undefined : OauthTokenFromJSON(json['token']),
    };
}

export function OauthRegisterResponseToJSON(value?: OauthRegisterResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user': OauthoauthUserToJSON(value.user),
        'token': OauthTokenToJSON(value.token),
    };
}

