/* tslint:disable */
/* eslint-disable */
/**
 * lottery/record.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RecordRecordRemark
 */
export interface RecordRecordRemark {
    /**
     * 
     * @type {number}
     * @memberof RecordRecordRemark
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof RecordRecordRemark
     */
    recordId?: number;
    /**
     * 
     * @type {number}
     * @memberof RecordRecordRemark
     */
    remarkId?: number;
    /**
     * 
     * @type {string}
     * @memberof RecordRecordRemark
     */
    value?: string;
    /**
     * 
     * @type {Date}
     * @memberof RecordRecordRemark
     */
    createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof RecordRecordRemark
     */
    updatedAt?: Date;
}

/**
 * Check if a given object implements the RecordRecordRemark interface.
 */
export function instanceOfRecordRecordRemark(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecordRecordRemarkFromJSON(json: any): RecordRecordRemark {
    return RecordRecordRemarkFromJSONTyped(json, false);
}

export function RecordRecordRemarkFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordRecordRemark {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'recordId': !exists(json, 'recordId') ? undefined : json['recordId'],
        'remarkId': !exists(json, 'remarkId') ? undefined : json['remarkId'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'createdAt': !exists(json, 'createdAt') ? undefined : (new Date(json['createdAt'])),
        'updatedAt': !exists(json, 'updatedAt') ? undefined : (new Date(json['updatedAt'])),
    };
}

export function RecordRecordRemarkToJSON(value?: RecordRecordRemark | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'recordId': value.recordId,
        'remarkId': value.remarkId,
        'value': value.value,
        'createdAt': value.createdAt === undefined ? undefined : (value.createdAt.toISOString()),
        'updatedAt': value.updatedAt === undefined ? undefined : (value.updatedAt.toISOString()),
    };
}

