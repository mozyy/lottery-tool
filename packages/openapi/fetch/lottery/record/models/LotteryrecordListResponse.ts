/* tslint:disable */
/* eslint-disable */
/**
 * lottery/record.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { PaginatePaginated } from './PaginatePaginated';
import {
    PaginatePaginatedFromJSON,
    PaginatePaginatedFromJSONTyped,
    PaginatePaginatedToJSON,
} from './PaginatePaginated';
import type { RecordRecord } from './RecordRecord';
import {
    RecordRecordFromJSON,
    RecordRecordFromJSONTyped,
    RecordRecordToJSON,
} from './RecordRecord';

/**
 * 
 * @export
 * @interface LotteryrecordListResponse
 */
export interface LotteryrecordListResponse {
    /**
     * 
     * @type {Array<RecordRecord>}
     * @memberof LotteryrecordListResponse
     */
    records?: Array<RecordRecord>;
    /**
     * 
     * @type {PaginatePaginated}
     * @memberof LotteryrecordListResponse
     */
    paginated?: PaginatePaginated;
}

/**
 * Check if a given object implements the LotteryrecordListResponse interface.
 */
export function instanceOfLotteryrecordListResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LotteryrecordListResponseFromJSON(json: any): LotteryrecordListResponse {
    return LotteryrecordListResponseFromJSONTyped(json, false);
}

export function LotteryrecordListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): LotteryrecordListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'records': !exists(json, 'records') ? undefined : ((json['records'] as Array<any>).map(RecordRecordFromJSON)),
        'paginated': !exists(json, 'paginated') ? undefined : PaginatePaginatedFromJSON(json['paginated']),
    };
}

export function LotteryrecordListResponseToJSON(value?: LotteryrecordListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'records': value.records === undefined ? undefined : ((value.records as Array<any>).map(RecordRecordToJSON)),
        'paginated': PaginatePaginatedToJSON(value.paginated),
    };
}

