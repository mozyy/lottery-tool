/* tslint:disable */
/* eslint-disable */
/**
 * lottery/record.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RecordNewRecordInfo } from './RecordNewRecordInfo';
import {
    RecordNewRecordInfoFromJSON,
    RecordNewRecordInfoFromJSONTyped,
    RecordNewRecordInfoToJSON,
} from './RecordNewRecordInfo';
import type { RecordNewRecordRemark } from './RecordNewRecordRemark';
import {
    RecordNewRecordRemarkFromJSON,
    RecordNewRecordRemarkFromJSONTyped,
    RecordNewRecordRemarkToJSON,
} from './RecordNewRecordRemark';

/**
 * 
 * @export
 * @interface RecordNewRecord
 */
export interface RecordNewRecord {
    /**
     * 
     * @type {RecordNewRecordInfo}
     * @memberof RecordNewRecord
     */
    record?: RecordNewRecordInfo;
    /**
     * 
     * @type {Array<RecordNewRecordRemark>}
     * @memberof RecordNewRecord
     */
    recordRemarks?: Array<RecordNewRecordRemark>;
}

/**
 * Check if a given object implements the RecordNewRecord interface.
 */
export function instanceOfRecordNewRecord(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function RecordNewRecordFromJSON(json: any): RecordNewRecord {
    return RecordNewRecordFromJSONTyped(json, false);
}

export function RecordNewRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecordNewRecord {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'record': !exists(json, 'record') ? undefined : RecordNewRecordInfoFromJSON(json['record']),
        'recordRemarks': !exists(json, 'recordRemarks') ? undefined : ((json['recordRemarks'] as Array<any>).map(RecordNewRecordRemarkFromJSON)),
    };
}

export function RecordNewRecordToJSON(value?: RecordNewRecord | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'record': RecordNewRecordInfoToJSON(value.record),
        'recordRemarks': value.recordRemarks === undefined ? undefined : ((value.recordRemarks as Array<any>).map(RecordNewRecordRemarkToJSON)),
    };
}

