/* tslint:disable */
/* eslint-disable */
/**
 * health/nurse.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { HospitalHospital } from './HospitalHospital';
import {
    HospitalHospitalFromJSON,
    HospitalHospitalFromJSONTyped,
    HospitalHospitalToJSON,
} from './HospitalHospital';
import type { NurseNurse } from './NurseNurse';
import {
    NurseNurseFromJSON,
    NurseNurseFromJSONTyped,
    NurseNurseToJSON,
} from './NurseNurse';

/**
 * 
 * @export
 * @interface HealthnurseGetResponse
 */
export interface HealthnurseGetResponse {
    /**
     * 
     * @type {NurseNurse}
     * @memberof HealthnurseGetResponse
     */
    nurse?: NurseNurse;
    /**
     * 
     * @type {HospitalHospital}
     * @memberof HealthnurseGetResponse
     */
    hospital?: HospitalHospital;
}

/**
 * Check if a given object implements the HealthnurseGetResponse interface.
 */
export function instanceOfHealthnurseGetResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HealthnurseGetResponseFromJSON(json: any): HealthnurseGetResponse {
    return HealthnurseGetResponseFromJSONTyped(json, false);
}

export function HealthnurseGetResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthnurseGetResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'nurse': !exists(json, 'nurse') ? undefined : NurseNurseFromJSON(json['nurse']),
        'hospital': !exists(json, 'hospital') ? undefined : HospitalHospitalFromJSON(json['hospital']),
    };
}

export function HealthnurseGetResponseToJSON(value?: HealthnurseGetResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'nurse': NurseNurseToJSON(value.nurse),
        'hospital': HospitalHospitalToJSON(value.hospital),
    };
}

