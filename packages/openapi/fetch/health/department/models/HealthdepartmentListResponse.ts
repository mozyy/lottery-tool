/* tslint:disable */
/* eslint-disable */
/**
 * health/department.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DepartmentHepartment } from './DepartmentHepartment';
import {
    DepartmentHepartmentFromJSON,
    DepartmentHepartmentFromJSONTyped,
    DepartmentHepartmentToJSON,
} from './DepartmentHepartment';
import type { PaginatePaginated } from './PaginatePaginated';
import {
    PaginatePaginatedFromJSON,
    PaginatePaginatedFromJSONTyped,
    PaginatePaginatedToJSON,
} from './PaginatePaginated';

/**
 * 
 * @export
 * @interface HealthdepartmentListResponse
 */
export interface HealthdepartmentListResponse {
    /**
     * 
     * @type {Array<DepartmentHepartment>}
     * @memberof HealthdepartmentListResponse
     */
    department?: Array<DepartmentHepartment>;
    /**
     * 
     * @type {PaginatePaginated}
     * @memberof HealthdepartmentListResponse
     */
    paginated?: PaginatePaginated;
}

/**
 * Check if a given object implements the HealthdepartmentListResponse interface.
 */
export function instanceOfHealthdepartmentListResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function HealthdepartmentListResponseFromJSON(json: any): HealthdepartmentListResponse {
    return HealthdepartmentListResponseFromJSONTyped(json, false);
}

export function HealthdepartmentListResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): HealthdepartmentListResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'department': !exists(json, 'department') ? undefined : ((json['department'] as Array<any>).map(DepartmentHepartmentFromJSON)),
        'paginated': !exists(json, 'paginated') ? undefined : PaginatePaginatedFromJSON(json['paginated']),
    };
}

export function HealthdepartmentListResponseToJSON(value?: HealthdepartmentListResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'department': value.department === undefined ? undefined : ((value.department as Array<any>).map(DepartmentHepartmentToJSON)),
        'paginated': PaginatePaginatedToJSON(value.paginated),
    };
}

