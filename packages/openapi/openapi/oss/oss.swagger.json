{
  "swagger": "2.0",
  "info": {
    "title": "oss/oss.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "OssService"
    }
  ],
  "host": "api.zuoyinyun.com",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/oss.oss.OssService/oss": {
      "get": {
        "operationId": "OssService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ossossListResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "paginate.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "paginate.perPage",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OssService"
        ]
      },
      "post": {
        "operationId": "OssService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ossossCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ossossCreateRequest"
            }
          }
        ],
        "tags": [
          "OssService"
        ]
      }
    },
    "/oss.oss.OssService/oss/{id}": {
      "get": {
        "operationId": "OssService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ossossGetResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OssService"
        ]
      },
      "delete": {
        "operationId": "OssService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ossossDeleteResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "OssService"
        ]
      },
      "patch": {
        "operationId": "OssService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/ossossUpdateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "oss": {
                  "$ref": "#/definitions/ossNewOss"
                }
              }
            }
          }
        ],
        "tags": [
          "OssService"
        ]
      }
    }
  },
  "definitions": {
    "ossBucketName": {
      "type": "string",
      "enum": [
        "IMAGE",
        "STATIC"
      ],
      "default": "IMAGE"
    },
    "ossNewOss": {
      "type": "object",
      "properties": {
        "bucketName": {
          "$ref": "#/definitions/ossBucketName"
        },
        "objectKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "ossOss": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int32"
        },
        "bucketName": {
          "$ref": "#/definitions/ossBucketName"
        },
        "objectKey": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "oss object"
    },
    "ossossCreateRequest": {
      "type": "object",
      "properties": {
        "oss": {
          "$ref": "#/definitions/ossNewOss"
        }
      }
    },
    "ossossCreateResponse": {
      "type": "object",
      "properties": {
        "oss": {
          "$ref": "#/definitions/ossOss"
        }
      }
    },
    "ossossDeleteResponse": {
      "type": "object"
    },
    "ossossGetResponse": {
      "type": "object",
      "properties": {
        "oss": {
          "$ref": "#/definitions/ossOss"
        }
      }
    },
    "ossossListResponse": {
      "type": "object",
      "properties": {
        "oss": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/ossOss"
          }
        },
        "paginated": {
          "$ref": "#/definitions/paginatePaginated"
        }
      }
    },
    "ossossUpdateResponse": {
      "type": "object",
      "properties": {
        "oss": {
          "$ref": "#/definitions/ossOss"
        }
      }
    },
    "paginatePaginate": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "perPage": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Paginate item"
    },
    "paginatePaginated": {
      "type": "object",
      "properties": {
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "perPage": {
          "type": "integer",
          "format": "int32"
        },
        "total": {
          "type": "integer",
          "format": "int32"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "OAuth2": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://example.com/oauth/authorize",
      "tokenUrl": "https://example.com/oauth/token",
      "scopes": {
        "login": ""
      }
    }
  }
}
