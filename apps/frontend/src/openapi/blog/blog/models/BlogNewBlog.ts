/* tslint:disable */
/* eslint-disable */
/**
 * blog/blog.proto
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: version not set
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface BlogNewBlog
 */
export interface BlogNewBlog {
    /**
     * 
     * @type {string}
     * @memberof BlogNewBlog
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof BlogNewBlog
     */
    image?: string;
    /**
     * 
     * @type {string}
     * @memberof BlogNewBlog
     */
    summary?: string;
    /**
     * 
     * @type {string}
     * @memberof BlogNewBlog
     */
    markdown?: string;
    /**
     * 
     * @type {string}
     * @memberof BlogNewBlog
     */
    author?: string;
}

/**
 * Check if a given object implements the BlogNewBlog interface.
 */
export function instanceOfBlogNewBlog(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BlogNewBlogFromJSON(json: any): BlogNewBlog {
    return BlogNewBlogFromJSONTyped(json, false);
}

export function BlogNewBlogFromJSONTyped(json: any, ignoreDiscriminator: boolean): BlogNewBlog {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'title': !exists(json, 'title') ? undefined : json['title'],
        'image': !exists(json, 'image') ? undefined : json['image'],
        'summary': !exists(json, 'summary') ? undefined : json['summary'],
        'markdown': !exists(json, 'markdown') ? undefined : json['markdown'],
        'author': !exists(json, 'author') ? undefined : json['author'],
    };
}

export function BlogNewBlogToJSON(value?: BlogNewBlog | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'image': value.image,
        'summary': value.summary,
        'markdown': value.markdown,
        'author': value.author,
    };
}

